<!-- <h3>Campagnes en cour</h3>
<table id="campagnes" class="display table table-striped" data-source="<%= campagnes_url(current_user: current_user, format: "json") %>">
  <thead>
    <tr>
      <li><th>Titre</th></li>
      <th>Produit</th>
      <th>date de début - date de fin</th>
      <th>ciblage</th>
      <th>nombre de pharmacie</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>

<h3>Challenges en cour</h3>
<table id="challenges" class="display table table-striped" data-source="<%= challenges_url(current_user: current_user, format: "json") %>">
  <thead>
    <tr>
      <th>Description</th>
      <th>date de début - date de fin</th>
      <th>ciblage</th>
      <th>nombre de pharmacie</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table> -->

<!-- <li><%= link_to 'Ajouter une campagne', new_campagne_path %></li>
<li><%= link_to 'Ajouter un challenge', new_challenge_path %></li> -->

<!-- <% #@products.each do |product| %>
  <tr>
    <td><%=# link_to(product.name, product) %></td>
    <td><%=# product.category %></td>
    <td><%=# product.released_on.strftime("%B %e, %Y") %></td>
    <td><%=# number_to_currency(product.price) %></td>
  </tr>
<% #end %> -->

<div class="row">
  <div class="col-md-4 col-md-offset-4 text-center">

    <h2>Ajouter une campagne</h2>

    <%= form_for @campaign, html: {multipart: true} do |f| %>

      <div class="form-group">
        <%= f.text_field :name, autofocus: true, class: "form-control", placeholder: "Titre de la campagne" %>
      </div>

      <div class="form-group">
        <%= f.text_field :product, autofocus: true, class: "form-control", placeholder: "Produit" %>
      </div>

      <div class="form-group">
        <%= f.collection_select :laboratory_id, Laboratory.all, :id, :name, {}, class: "form-control"%>
      </div>

      <div class="form-group">
        <%= f.date_field :start_at, autofocus: true, class: "form-control" %>
      </div>

      <div class="form-group">
        <%= f.date_field :end_at, autofocus: true, class: "form-control" %>
      </div>

      <div class="form-group">
        <%= f.text_field :target, autofocus: true, class: "form-control", placeholder: "Ciblage" %>
      </div>

      <div class="form-group">
        <%= f.text_field :nbr_pharma, autofocus: true, class: "form-control", placeholder: "Nombre de pharmacie concerné par la campagne" %>
      </div>

      <div class="actions">
        <%= f.submit "Ajouter", { :class=>"btn btn-primary" }%>
      </div>
    <% end %>

  </div>
</div>

<ul class="nav navbar-nav navbar-left">
      <!-- <li><%= link_to 'Campagne', dashboards_campaigns_current_path %></li>
      <li><%= link_to 'Challenge', dashboards_challenges_current_path %></li> -->
</ul>

# http_basic_authenticate_with :name => "myfinance", :password => "credit123"

skip_before_action :authenticate_user!, raise: false # we do not need devise authentication here
before_action :fetch_user, :except => [:index, :create]

def fetch_user
  @user = User.find_by_id(params[:id])
end

def index
  @users = User.all
  respond_to do |format|
    format.json { render json: @users }
    format.xml { render xml: @users }
  end
end

def show
  respond_to do |format|
    format.json { render json: @user }
    format.xml { render xml: @user }
  end
end

def create
  respond_with User.create(access_token: params[:access_token], first_name: params[:first_name], last_name: params[:last_name], email: params[:email], password: params[:password], role: parmas[:role], laboratory_id: params[:laboratory_id])
  # @user = User.new(user_params)
  # @user.password = Devise.friendly_token
  # respond_to do |format|
  #   if @user.save
  #     format.json { render json: @user, status: ok }
  #     format.xml { render xml: @user, status: :created }
  #   else
  #     format.json { render json: @user.errors, status: :unprocessable_entity }
  #     format.xml { render xml: @user.errors, status: :unprocessable_entity }
  #   end
  # end
end

def update
  respond_to do |format|
    if @user.update_attributes(params[:user])
      format.json { head :no_content, status: :ok }
      format.xml { head :no_content, status: :ok }
    else
      format.json { render json: @user.errors, status: :unprocessable_entity }
      format.xml { render xml: @user.errors, status: :unprocessable_entity }
    end
  end
end

def destroy
  respond_to do |format|
    if @user.destroy
      format.json { head :no_content, status: :ok }
      format.xml { head :no_content, status: :ok }
    else
      format.json { render json: @user.errors, status: :unprocessable_entity }
      format.xml { render xml: @user.errors, status: :unprocessable_entity }
    end
  end
end

def user_params
  params.require(:user).permit(:first_name, :last_name, :email, :password, :role, :laboratory_id)
end
end
